<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bl8=
</value>
  </data>
</root>